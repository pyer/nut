package nut.model;

import nut.model.ValidationException;

public class Layout implements java.io.Serializable
{
    //--------------------------/
    //- Class/Member Variables -/
    //--------------------------/

    /**
     * The directory where is nut.xml
     */
    private String baseDirectory = ".";

    /**
     * This element specifies a directory containing the source of the project.
     * The generated layout system will compile the source
     * in this directory when the project is built.
     * The path given is relative to the project descriptor.
     */
    private String sourceDirectory = "src/main/java";

    /**
     * This element specifies a directory containing the resources of the project.
     * The path given is relative to the project descriptor.
     */
    private String resourceDirectory = "src/main/resources";

    /**
     * This element specifies a directory containing the web application sources.
     * The path given is relative to the project descriptor.
     */
    private String webappDirectory = "src/main/webapp";

    /**
     * This element specifies a directory containing the unit test
     * source of the project.
     * The generated layout system will compile this directory
     * when the project is being tested.
     * The path given is relative to the project descriptor.
     */
    private String testSourceDirectory = "src/test/java";

    /**
     * This element specifies a directory containing the unit test
     * resources of the project.
     * The path given is relative to the project descriptor.
     */
    private String testResourceDirectory = "src/test/resources";

    /**
     * The directory where all files generated by the layout are
     * placed.
     */
    private String targetDirectory = "target";

    /**
     * The directory where compiled application classes are placed.
     */
    private String outputDirectory = "target/classes";

    /**
     * The directory where compiled test classes are placed.
     */
    private String testOutputDirectory = "target/test-classes";

    /**
     * The directory where test reports are placed.
     */
    private String testReportDirectory = "target/test-reports";

    /**
     * The test suite for testNG.
     */
    private String testSuite = "src/test/testng.xml";

    //-----------/
    //- Methods -/
    //-----------/

    public String getBaseDirectory()
    {
        return this.baseDirectory;
    }

    public void setBaseDirectory( String baseDirectory )
    {
        this.baseDirectory = baseDirectory;
    }

    public String getSourceDirectory()
    {
        return this.sourceDirectory;
    }

    public void setSourceDirectory( String sourceDirectory )
    {
        this.sourceDirectory = sourceDirectory;
    }

    public String getResourceDirectory()
    {
        return this.resourceDirectory;
    }

    public void setWebappDirectory( String webappDirectory )
    {
        this.webappDirectory = webappDirectory;
    }

    public String getWebappDirectory()
    {
        return this.webappDirectory;
    }

    public void setResourceDirectory( String resourceDirectory )
    {
        this.resourceDirectory = resourceDirectory;
    }


    public String getTestSourceDirectory()
    {
        return this.testSourceDirectory;
    }

    public void setTestSourceDirectory( String testSourceDirectory )
    {
        this.testSourceDirectory = testSourceDirectory;
    }

    public String getTestResourceDirectory()
    {
        return this.testResourceDirectory;
    }

    public void setTestResourceDirectory( String testResourceDirectory )
    {
        this.testResourceDirectory = testResourceDirectory;
    }

    public String getTargetDirectory()
    {
        return this.targetDirectory;
    }

    public void setTargetDirectory( String directory )
    {
        this.targetDirectory = directory;
    }

    public String getOutputDirectory()
    {
        return this.outputDirectory;
    }

    public void setOutputDirectory( String outputDirectory )
    {
        this.outputDirectory = outputDirectory;
    }

    public String getTestOutputDirectory()
    {
        return this.testOutputDirectory;
    }

    public void setTestOutputDirectory( String testOutputDirectory )
    {
        this.testOutputDirectory = testOutputDirectory;
    }

    public String getTestReportDirectory()
    {
        return this.testReportDirectory;
    }

    public void setTestReportDirectory( String testReportDirectory )
    {
        this.testReportDirectory = testReportDirectory;
    }

    public String getTestSuite()
    {
        return this.testSuite;
    }

    public void setTestSuite( String testSuite )
    {
        this.testSuite = testSuite;
    }

    /**
     * validate method
     */
    public void validate() throws ValidationException
    {
        if ( this.testSuite == null )
            throw new ValidationException( "layout.testSuite must not be null" );
    }

    /**
     * merge method
     *
     */
    public void merge(Layout parent)
    {
      mergeMainDirectories(parent);
      mergeTestDirectories(parent);
      mergeTestSuite(parent);
    }

    private void mergeMainDirectories(Layout parent)
    {
      if( this.sourceDirectory == null )
         this.sourceDirectory = parent.getSourceDirectory();
      if( this.resourceDirectory == null )
         this.resourceDirectory = parent.getResourceDirectory();
      if( this.targetDirectory == null )
         this.targetDirectory = parent.getTargetDirectory();
      if( this.outputDirectory == null )
         this.outputDirectory = parent.getOutputDirectory();
    }

    private void mergeTestDirectories(Layout parent)
    {
      if( this.testSourceDirectory == null )
         this.testSourceDirectory = parent.getTestSourceDirectory();
      if( this.testResourceDirectory == null )
         this.testResourceDirectory = parent.getTestResourceDirectory();
      if( this.testOutputDirectory == null )
         this.testOutputDirectory = parent.getTestOutputDirectory();
      if( this.testReportDirectory == null )
         this.testReportDirectory = parent.getTestReportDirectory();
    }

    private void mergeTestSuite(Layout parent)
    {
      if( this.testSuite == null )
         this.testSuite = parent.getTestSuite();
    }

}
