#!/bin/sh
set -e

cd $(dirname $0)
root=$(pwd)
tmp=$(grep -P -m 1 "<version>(.*)</version>" nut.xml)
NUT_VERSION=$(expr $tmp : '<version>\(.*\)</version>')
NUT_HOME="$HOME/nutRepository"

echo "Build nut script"
cat <<EOF >nut
#!/bin/bash
# Nut start up script
# ----------------------------------------------------------------------------
export NUT_VERSION=$NUT_VERSION
export NUT_HOME=$NUT_HOME
java -Xmx512M -classpath \$NUT_HOME/nut/Nut-\$NUT_VERSION.jar:\$NUT_HOME/org/codehaus/plexus/plexus-utils-3.0.jar nut.Nut "-Dversion=\$NUT_VERSION" "-Dhome=\$NUT_HOME" \$*
EOF

chmod +x nut
#sudo install nut /usr/bin/

echo "Build nut local repository"
[ -d $NUT_HOME ] && rm -r $NUT_HOME
mkdir -p $NUT_HOME/nut
cp -a localRepository/* $NUT_HOME/

cd $root
mkdir -p target/classes
echo "Compiling.."
options="-d $root/target/classes -cp $root/target/classes:$NUT_HOME/org/codehaus/plexus/plexus-utils-3.0.jar -deprecation -Xlint:unchecked"
cd $root/Nut
echo " - logging"
cd main/java/logging
javac $options Log.java
echo " - xml"
cd ../xml
javac $options XmlParserException.java XmlParser.java XmlSerializer.java
echo " - json"
cd ../json
javac $options JsonSerializer.java
echo " - artifact"
cd ../artifact
javac $options InvalidArtifactRTException.java Artifact.java
echo " - model"
cd ../model
javac $options Goal.java Dependency.java Build.java Model.java Repository.java XmlReader.java XmlWriter.java JsonWriter.java ValidationException.java
echo " - interpolation"
cd ../interpolation
javac $options Interpolator.java
echo " - project"
cd ../project
javac $options DependencyNotFoundException.java DependencyChecker.java ProjectException.java Project.java
echo " - build"
cd ../build
javac $options BuildException.java ProjectBuilder.java DuplicateProjectException.java ScannerException.java Scanner.java Sorter.java
cd archive
javac $options Archiver.java ArchiverException.java
cd ..
echo " - goals"
cd ../goals
javac $options GoalException.java
javac $options Clean.java
javac $options Compile.java
javac $options Install.java
javac $options PackJar.java
javac $options PackWar.java
javac $options PackZip.java
javac $options ExecShellScript.java
javac $options Test.java
echo " - Nut"
cd ..
javac $options Nut.java

cd $root
echo "Build Nut.jar"
mkdir -p $NUT_HOME/nut
jar cf $NUT_HOME/nut/Nut-$NUT_VERSION.jar -C target/classes .
rm -r target

echo "Build TestNG.jar"
mkdir -p target/classes
cd testNG/main/java
options="-d $root/target/classes -cp $root/target/classes:$NUT_HOME/org/testng/testng-6.8.7.jar -deprecation -Xlint:unchecked"
javac $options TestRunner.java TestListener.java
cd $root
jar cf $NUT_HOME/nut/testNG-$NUT_VERSION.jar -C target/classes .
cp $NUT_HOME/nut/testNG-$NUT_VERSION.jar $NUT_HOME/nut/testNG-2.1.jar
rm -r target
echo "Install /usr/bin/nut'"
sudo install nut /usr/bin/
echo "Done."
